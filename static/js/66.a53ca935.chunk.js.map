{"version":3,"file":"static/js/66.a53ca935.chunk.js","mappings":"8KAKA,MA6IA,EA7IcA,KACZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,GAChCK,GAASC,EAAAA,EAAAA,MA2DTC,EAAmBC,UACvB,IAEE,MAAMC,EAAQC,eAAeC,QAAQ,aAGrC,GAFAC,QAAQC,IAAIJ,IAEPA,EAEH,OAIF,MAAMK,QAAiBC,EAAAA,EAAMC,IAAI,iDAAkD,CACjFC,QAAS,CACPC,cAAe,UAAUT,OAI7BG,QAAQC,IAAIC,GAERA,EAASK,KAAKC,QAChBR,QAAQC,IAAIC,EAASK,KAAKE,MAE1BT,QAAQC,IAAIC,EAASK,KAAKG,SAAW,+BAEzC,CAAE,MAAOC,GAAM,IAADC,EAAAC,EACZb,QAAQc,MAAM,+BAAgCH,GAC9CX,QAAQC,KAAgB,QAAZW,EAAAD,EAAIT,gBAAQ,IAAAU,GAAM,QAANC,EAAZD,EAAcL,YAAI,IAAAM,OAAN,EAAZA,EAAoBH,UAAW,oBAC7C,GAKF,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJF,EAAAA,EAAAA,MAAA,QAAMI,SA9EWvB,UACnBwB,EAAEC,iBASF,IAEE,MAAMnB,QAAiBC,EAAAA,EAAMmB,KAAK,uCAAwC,CACxEpC,QACAG,aAGF,GAAIa,EAASK,KAAKC,QAAS,CACzBR,QAAQC,IAAIC,GAEZqB,EAAAA,GAAMf,QAAQ,qBAEd,MAAMX,EAAQK,EAASK,KAAKV,MAC5BG,QAAQC,IAAIJ,GAEZC,eAAe0B,QAAQ,YAAa3B,GACpCJ,EAAS,eACTE,GACF,MACE4B,EAAAA,GAAMT,MAAMZ,EAASK,KAAKG,SAAW,eAEzC,CAAE,MAAOI,GACPd,QAAQc,MAAM,sBAAuBA,GACrCS,EAAAA,GAAMT,MAAMA,EAAMZ,SAASK,KAAKG,SAAW,gDAC7C,GA4C+BO,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAAA,SACEO,KAAK,QACLC,KAAK,QACLC,YAAY,mBACZC,MAAO1C,EACP2C,SAAWT,GAAMjC,EAASiC,EAAEU,OAAOF,SAEpCrC,EAAOL,QAASgC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAE1B,EAAOL,YAE3D6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPC,EAAAA,EAAAA,KAAA,SACEO,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAOvC,EACPwC,SAAWT,GAAM9B,EAAY8B,EAAEU,OAAOF,SAEvCrC,EAAOF,WAAY6B,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAE1B,EAAOF,eAE9D6B,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAST,UAAU,YAAWC,SAAC,cAK9CF,EAAAA,EAAAA,MAAA,KAAGgB,MAAO,CAAEC,UAAW,UAAWf,SAAA,CAAC,yBACV,KACvBC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACHC,GAAG,UACHlB,UAAU,cACVe,MAAO,CAAEI,MAAO,UAAWC,eAAgB,aAAcnB,SAC1D,iBAIC,C","sources":["pages/Login.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const navigate=useNavigate();\r\n\r\n  // Validation function for email and password\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!email) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      errors.email = \"Please enter a valid email address\";\r\n    }\r\n    if (!password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate form fields\r\n    // const validationErrors = validateForm();\r\n    // if (Object.keys(validationErrors).length > 0) {\r\n    //   setErrors(validationErrors);\r\n    //   return;\r\n    // }\r\n\r\n    try {\r\n      // Make API request to login\r\n      const response = await axios.post(\"http://localhost:3000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        console.log(response);\r\n        \r\n        toast.success(\"Login successful!\");\r\n        // Redirect or save token as needed\r\n        const token = response.data.token;\r\n        console.log(token);\r\n        \r\n        sessionStorage.setItem(\"authToken\", token);\r\n        navigate('/homeScreen')\r\n        fetchUserDetails();\r\n      } else {\r\n        toast.error(response.data.message || \"Login failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error);\r\n      toast.error(error.response.data.message || \"Something went wrong. Please try again later.\");\r\n    }\r\n  };\r\n\r\n \r\n\r\n  // useEffect(() => {\r\n    \r\n  // }, []);\r\n  const fetchUserDetails = async () => {\r\n    try {\r\n      // Retrieve token from localStorage or other secure storage\r\n      const token = sessionStorage.getItem('authToken'); // Replace with actual token retrieval\r\n      console.log(token);\r\n      \r\n      if (!token) {\r\n        // setError('User is not logged in');\r\n        return;\r\n      }\r\n\r\n      // Make the API request with the token in the Authorization header\r\n      const response = await axios.get('http://localhost:3000/api/auth/get-userDetails', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log(response);\r\n      \r\n      if (response.data.success) {\r\n        console.log(response.data.user);\r\n      } else {\r\n        console.log(response.data.message || 'Failed to fetch user details');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching user details:', err);\r\n      console.log(err.response?.data?.message || 'An error occurred');\r\n    }\r\n  };\r\n\r\n  // fetchUserDetails();\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {errors.email && <span className=\"error-message\">{errors.email}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {errors.password && <span className=\"error-message\">{errors.password}</span>}\r\n        </div>\r\n        <button type=\"submit\" className=\"login-btn\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      \r\n      <p style={{ textAlign: \"center\" }}>\r\n        Don't have an account?{\" \"}\r\n        <Link\r\n          to=\"/signUp\"\r\n          className=\"toggle-link\"\r\n          style={{ color: \"#007BFF\", textDecoration: \"underline\" }}\r\n        >\r\n          Sign Up\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"names":["Login","email","setEmail","useState","password","setPassword","errors","setErrors","navigate","useNavigate","fetchUserDetails","async","token","sessionStorage","getItem","console","log","response","axios","get","headers","Authorization","data","success","user","message","err","_err$response","_err$response$data","error","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","post","toast","setItem","type","name","placeholder","value","onChange","target","style","textAlign","Link","to","color","textDecoration"],"sourceRoot":""}