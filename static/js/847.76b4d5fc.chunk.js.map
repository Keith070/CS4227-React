{"version":3,"file":"static/js/847.76b4d5fc.chunk.js","mappings":"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","sources":["model/userModel.js","pages/Signup.js"],"sourcesContent":["class UserModel {\r\n    constructor(user) {\r\n      this.username = user.username || '';\r\n      this.email = user.email || '';\r\n      this.mobile = user.mobile || '';\r\n      this.password = user.password || '';\r\n    }\r\n  }\r\n  export default UserModel;","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport UserModel from \"../model/userModel\";\r\n\r\nconst SignUp = () => {\r\n  const [formValues, setFormValues] = useState(new UserModel({}));\r\n\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n\r\n    if (!formValues.username) {\r\n      errors.username = \"Username is required\";\r\n    } else if (!/^[A-Za-z0-9_]{3,15}$/.test(formValues.username)) {\r\n      errors.username =\r\n        \"Username should be 3-15 characters long and can only contain letters, numbers, and underscores.';\";\r\n    }\r\n\r\n    if(!formValues.email){\r\nerrors.email=\"Email is required\"\r\n    }else if(!/\\S+@\\S+\\.\\S+/.test(formValues.email)){\r\n      errors.email=\"Please enter a valid email address\"\r\n    }\r\n    if (!formValues.mobile) {\r\n      errors.mobile = 'Mobile number is required';\r\n    } else if (!/^\\d{10}$/.test(formValues.mobile)) {\r\n      errors.mobile = 'Mobile number should be 10 digits';\r\n    }\r\n\r\n    if (!formValues.password) {\r\n      errors.password = 'Password is required';\r\n    }\r\nreturn errors;\r\n\r\n  };\r\n\r\n\r\n  const handleSubmit=async (e)=>{\r\n    e.preventDefault();\r\n    console.log(formValues);\r\n    \r\n    const errors=validateForm();\r\n    console.log(errors);\r\n    if(Object.keys(errors).length===0){\r\n      // alert(\"Form submitted\")\r\n    }else{\r\n      // alert(\"Form Submission Failed\");\r\n      setFormErrors(errors);\r\n    }\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/api/auth/register-user\", formValues);\r\n      console.log(response, 'res');\r\n\r\n      if (response.data.success) {\r\n          toast.success(response.data.message || 'Registration successful!');\r\n          setFormValues({username:\"\",email:\"\",mobile:\"\",password:\"\"});\r\n          setFormErrors(\"\");\r\n      } else {\r\n          toast.error(response.data.message || 'Registration failed!');\r\n      }\r\n  } catch (error) {\r\n      console.error('Error during registration:', error);\r\n      toast.error(error.response.data.message || \"Something went wrong. Please try again later.\");\r\n  }\r\n    \r\n    \r\n\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n    \r\n  };\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your username\"\r\n            name=\"username\"\r\n            value={formValues.username}\r\n            onChange={handleInputChange}\r\n           \r\n          />\r\n         {formErrors.username?<span className=\"error-message\">{formErrors.username}</span>:''} \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={formValues.email}\r\n            onChange={handleInputChange}\r\n          />\r\n          {formErrors.email?<span className=\"error-message\">{formErrors.email}</span>:''} \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Mobile No</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"mobile\"\r\n            placeholder=\"Enter your mobile number\"\r\n            value={formValues.mobile}\r\n            onChange={handleInputChange}\r\n          />\r\n          {formErrors.mobile?<span className=\"error-message\">{formErrors.mobile}</span>:''} \r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={formValues.password}\r\n            onChange={handleInputChange}\r\n          />\r\n          {formErrors.password?<span className=\"error-message\">{formErrors.password}</span>:''} \r\n        </div>\r\n        <button type=\"submit\" className=\"login-btn\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Already have an account?{\" \"}\r\n        <Link\r\n          to=\"/login\"\r\n          className=\"toggle-link\"\r\n          style={{ color: \"#007BFF\", textDecoration: \"underline\" }}\r\n        >\r\n          Login\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;"],"names":["constructor","user","this","username","email","mobile","password","SignUp","formValues","setFormValues","useState","UserModel","formErrors","setFormErrors","handleInputChange","e","name","value","target","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","console","log","errors","validateForm","test","Object","keys","length","response","axios","post","data","success","toast","message","error","type","placeholder","onChange","style","textAlign","Link","to","color","textDecoration"],"sourceRoot":""}